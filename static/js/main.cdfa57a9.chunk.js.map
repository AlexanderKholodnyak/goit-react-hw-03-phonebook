{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","title","children","className","s","section","Form","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","this","form","label","type","placeholder","onChange","input","button","Component","Contacts","contacts","onDeleteContact","map","id","container","onClick","Filter","App","listOfContact","filter","addContact","data","contact","shortid","generate","find","toLowerCase","alert","prevState","getContacts","normalizedFilter","includes","changeFilter","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,2B,sSCA5BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,uB,sLCa9FC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,wBCqDUI,E,4MArDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,cAAtBJ,EADc,EACdA,KAAMK,EADQ,EACRA,MAEd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAE1BE,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,OACzB,EAAKO,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,uDAKlC,OACE,uBAAMU,SAAUC,KAAKL,aAAcZ,UAAWC,IAAEiB,KAAhD,UACE,wBAAOlB,UAAWC,IAAEkB,MAApB,iBAEE,uBACEC,KAAK,OACLf,KAAK,OACLK,MAAOO,KAAKb,MAAMC,KAClBgB,YAAY,GACZC,SAAUL,KAAKV,aACfP,UAAWC,IAAEsB,WAGjB,wBAAOvB,UAAWC,IAAEkB,MAApB,mBAEE,uBACEC,KAAK,MACLf,KAAK,SACLK,MAAOO,KAAKb,MAAME,OAClBe,YAAY,GACZC,SAAUL,KAAKV,aACfP,UAAWC,IAAEsB,WAKf,wBAAQH,KAAK,SAASpB,UAAWC,IAAEuB,OAAnC,gC,GA7CSC,a,gBCoBJC,EArBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OACf,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaN,UAAWC,IAAE8B,UAA1B,UACE,oBAAG/B,UAAWC,IAAEI,KAAhB,UACGA,EADH,KACWC,EAAQ,OAGjB,wBACEN,UAAWC,IAAEuB,OACbJ,KAAK,SACLY,QAAS,kBAAMJ,EAAgBE,IAHjC,0DALKA,SCYAG,EAfA,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAOY,EAAV,EAAUA,SAAV,OACb,0DACwB,IACtB,uBAAOF,KAAK,OAAOV,MAAOA,EAAOY,SAAUA,Q,QC+EhCY,E,4MA5Eb9B,MAAQ,CACNuB,SAAUQ,EACVC,OAAQ,GACR/B,KAAM,GACNC,OAAQ,I,EAgBV+B,WAAa,SAAAC,GAEX,IAAMC,EAAU,CACdT,GAAIU,IAAQC,WACZpC,KAAMiC,EAAKjC,KACXC,OAAQgC,EAAKhC,QAEf,EAAKK,SAAS,CAAEN,KAAMiC,EAAKjC,KAAMC,OAAQgC,EAAKhC,SAK9C,EAAKF,MAAMuB,SAASe,MAClB,SAAAH,GAAO,OAAIA,EAAQlC,KAAKsC,gBAAkBL,EAAKjC,KAAKsC,iBAElDC,MAAM,GAAD,OAAIL,EAAQlC,KAAZ,uBACL,EAAKM,UAAS,SAAAkC,GAAS,MAAK,CAC1BlB,SAAS,GAAD,mBAAMkB,EAAUlB,UAAhB,CAA0BY,S,EAI1CO,YAAc,WAGZ,IAAMC,EAAmB,EAAK3C,MAAMgC,OAAOO,cAC3C,OAAO,EAAKvC,MAAMuB,SAASS,QAAO,SAAAG,GAAO,OACvCA,EAAQlC,KAAKsC,cAAcK,SAASD,O,EAGxCE,aAAe,SAAAzC,GACb,EAAKG,SAAS,CAAEyB,OAAQ5B,EAAMC,cAAcC,S,EAE9CkB,gBAAkB,SAAAsB,GAChB,EAAKvC,UAAS,SAAAkC,GAAS,MAAK,CAC1BlB,SAAUkB,EAAUlB,SAASS,QAAO,SAAAG,GAAO,OAAIA,EAAQT,KAAOoB,U,kEA9ChE,IAAMvB,EAAWwB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM5B,GAC/B0B,GAAgBpC,KAAKN,SAAS,CAAEgB,SAAU0B,M,yCAI5BG,EAAWX,GACxB5B,KAAKb,MAAMuB,WAAakB,EAAUlB,UACpCwB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUzC,KAAKb,MAAMuB,a,+BA2C7D,OACE,qCACE,cAAC,EAAD,CAAS7B,MAAM,YAAf,SACE,cAAC,EAAD,CAAMkB,SAAUC,KAAKoB,eAEvB,eAAC,EAAD,CAASvC,MAAM,WAAf,UACE,cAAC,EAAD,CAAQY,MAAOO,KAAKmB,OAAQd,SAAUL,KAAKgC,eAC3C,cAAC,EAAD,CACEtB,SAAUV,KAAK6B,cACflB,gBAAiBX,KAAKW,4B,GArEhBH,aCIHkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAhE,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,uBAAuB,OAAS,4B","file":"static/js/main.cdfa57a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__QyBfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__19jOK\",\"label\":\"Form_label__RgL6Z\",\"input\":\"Form_input__32ALc\",\"button\":\"Form_button__2Olbw\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\nconst Section = ({ title, children }) => (\n  <div className={s.section}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\n//import shortid from 'shortid';\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n    //id: ''\n  };\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    //console.log({ name, value });\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', number: '' });\n    //   this.props.onSubmit(this.name, this.number);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"\"\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            placeholder=\"\"\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n\n        {\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        }\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport s from './Contacts.module.css';\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.container}>\n        <p className={s.name}>\n          {name}: {number}{' '}\n        </p>\n        {\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Удалить\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name{' '}\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n// Filter.defaultProps = {\n//    value:\"\",\n// }\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts/Contacts.jsx';\nimport Filter from './components/Filter';\nimport listOfContact from './components/Contacts/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: listOfContact,\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if(parsedContacts){this.setState({ contacts: parsedContacts });}\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = data => {\n    // console.log(data); \n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    this.setState({ name: data.name, number: data.number });\n    // this.setState(prevState => ({\n    //   contacts: [...prevState.contacts, contact]\n    // }));\n\n    this.state.contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n    )\n      ? alert(`${contact.name} is already added.`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, contact],\n        }));\n  };\n\n  getContacts = () =>  {\n    // this.state.contacts;\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={this.filter} onChange={this.changeFilter} />\n          <Contacts\n            contacts={this.getContacts()}\n            onDeleteContact={this.onDeleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__orhSr\",\"name\":\"Contacts_name__27aBy\",\"button\":\"Contacts_button__3RpmI\"};"],"sourceRoot":""}